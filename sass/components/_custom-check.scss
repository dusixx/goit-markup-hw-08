//
// label.custom-check > input.&__input + span.&__label
//

$checkboxWidth: 16px;
$checkboxHeight: divide(15, 16) * $checkboxWidth;
$checkboxMarginRight: divide(8, 16) * $checkboxWidth;
$checkboxBorderSize: divide(2, 16) * $checkboxWidth;
$checkboxOutlineSize: divide(3, 16) * $checkboxWidth;

$bgiCheckMark: "data:image/svg+xml,%3Csvg width='16' height='15' viewBox='0 0 16 15' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M3.95703 7.75166L3.88825 7.68604L3.81923 7.75141L2.93123 8.59258L2.85486 8.66492L2.93097 8.73753L6.42671 12.0724L6.49574 12.1382L6.56476 12.0724L14.069 4.91352L14.1449 4.84116L14.069 4.76881L13.1873 3.92764L13.1183 3.86183L13.0493 3.92761L6.49577 10.1735L3.95703 7.75166Z' fill='white' stroke='white' stroke-width='0.2'/%3E%3C/svg%3E%0A";

.custom-check {
  display: block;

  &__label {
    @include flexCenter();

    cursor: pointer;
    user-select: none;
  }

  &__input {
    @extend %visually-hidden;
  }

  &__input:focus-visible + &__label::before {
    box-shadow: 0 0 0 $checkboxOutlineSize rgba($colorAccent, 0.5);
  }

  &__input:checked + &__label::before {
    border-color: transparent;
    @include bg($color: $colorAccent, $origin: border-box, $img: url($bgiCheckMark));
  }

  &--centered {
    @include flexCenter("main");
  }
}

.custom-check__label {
  &::before {
    content: "";

    display: block;
    min-width: $checkboxWidth;
    height: $checkboxHeight;
    margin-right: $checkboxMarginRight;

    outline: unset;
    border: $checkboxBorderSize solid $colorGreyDark;
    border-radius: $checkboxBorderSize;

    @include mainTransition(border-color, background-color, box-shadow);
  }
}
